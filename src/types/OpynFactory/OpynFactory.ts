// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AssetAdded extends EthereumEvent {
  get params(): AssetAdded__Params {
    return new AssetAdded__Params(this);
  }
}

export class AssetAdded__Params {
  _event: AssetAdded;

  constructor(event: AssetAdded) {
    this._event = event;
  }

  get asset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AssetChanged extends EthereumEvent {
  get params(): AssetChanged__Params {
    return new AssetChanged__Params(this);
  }
}

export class AssetChanged__Params {
  _event: AssetChanged;

  constructor(event: AssetChanged) {
    this._event = event;
  }

  get asset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AssetDeleted extends EthereumEvent {
  get params(): AssetDeleted__Params {
    return new AssetDeleted__Params(this);
  }
}

export class AssetDeleted__Params {
  _event: AssetDeleted;

  constructor(event: AssetDeleted) {
    this._event = event;
  }

  get asset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OptionsContractCreated extends EthereumEvent {
  get params(): OptionsContractCreated__Params {
    return new OptionsContractCreated__Params(this);
  }
}

export class OptionsContractCreated__Params {
  _event: OptionsContractCreated;

  constructor(event: OptionsContractCreated) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OpynFactory extends SmartContract {
  static bind(address: Address): OpynFactory {
    return new OpynFactory("OpynFactory", address);
  }

  getNumberOfOptionsContracts(): BigInt {
    let result = super.call("getNumberOfOptionsContracts", []);

    return result[0].toBigInt();
  }

  try_getNumberOfOptionsContracts(): CallResult<BigInt> {
    let result = super.tryCall("getNumberOfOptionsContracts", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  optionsContracts(param0: BigInt): Address {
    let result = super.call("optionsContracts", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_optionsContracts(param0: BigInt): CallResult<Address> {
    let result = super.tryCall("optionsContracts", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}
